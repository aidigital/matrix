Calendar

let
    Source = fnCreateCalendar(#date(2014, 1, 1), #date(2019, 1, 1), null),
    ChangedType = Table.TransformColumnTypes(Source,{{"DateTime", type datetime}, {"Year", Int64.Type}, {"QuarterOfYear", Int64.Type}, {"MonthOfYear", Int64.Type}, {"DayOfMonth", Int64.Type}, {"DateInt", Int64.Type}, {"DayInWeek", Int64.Type}, {"ISOWeekYear", Int64.Type}, {"ISOWeekNum", Int64.Type}, {"ISOWeekID", Int64.Type}, {"Period445", Int64.Type}, {"Quarter445", Int64.Type}, {"WeekOfYear", Int64.Type}, {"WeekOfMonth", Int64.Type}}),

    UniqueMonthInCalendar=Table.Distinct(ChangedType[[MonthInCalendar]]),
    AddIndexMonthInCalendar = Table.AddIndexColumn(UniqueMonthInCalendar, "YearMonthIndex", 1, 1),

    Join = Table.NestedJoin(ChangedType,{"MonthInCalendar"},AddIndexMonthInCalendar,{"MonthInCalendar"},"NewColumn",JoinKind.Inner),
    ExpandYearMonthIndex = Table.ExpandTableColumn(Join, "NewColumn", {"YearMonthIndex"}, {"YearMonthIndex"}),
    WeekendLabel = Table.AddColumn(ExpandYearMonthIndex, "Weekend Label", each if [DayInWeek]=6 or [DayInWeek]=7 then "WEEKEND" else "WORKDAY")
in
    WeekendLabel