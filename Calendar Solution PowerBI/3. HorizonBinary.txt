HorizonBinary

//All of these Horizons are STATIC (Not Dynamic!), and they are all based on TODAY'S DATE (i.e. this table can only show MTD for the current date, not for another date in the past or future)
//This is a Binary Table: All Columns are either 0 or 1 (nothing else) 

let
    Source = Calendar,
    SelectOnlyTheDateColumn = Table.SelectColumns(Source,{"Date"}),
    
    TodayDate= DateTime.Date(DateTime.LocalNow()),
    StartOfCurrentWeek = DateTime.Date(Date.StartOfWeek( DateTime.LocalNow(), Day.Monday)),
    StartOfNextWeek = Date.AddDays(StartOfCurrentWeek,7),
    StartOfLastWeek = Date.AddDays(StartOfCurrentWeek,-7),
    StartOfTwoWeeksAgo = Date.AddDays(StartOfCurrentWeek,-14),
    StartOfThreeWeeksAgo = Date.AddDays(StartOfCurrentWeek,-21),
    StartOfTwoWeeksAhead = Date.AddDays(StartOfCurrentWeek,14),
    StartOfThreeWeeksAhead = Date.AddDays(StartOfCurrentWeek,21),

    //Year/Quarter/Month/Week-To-Date Functions
    StartOfCurrentYear = Date.StartOfYear(TodayDate),
    StartOfCurrentQuarter = Date.StartOfQuarter(TodayDate),
    StartOfCurrentMonth = Date.StartOfMonth(TodayDate),
    
    SameDayLastYear = Date.AddYears(TodayDate, -1),
    StartOfLastYear = Date.StartOfYear(SameDayLastYear),

    SameDayLastMonth = Date.AddMonths(TodayDate, -1),
    StartOfLastMonth = Date.StartOfMonth(SameDayLastMonth),

    SameDayLastQuarter = Date.AddQuarters(TodayDate, -1),
    StartOfLastQuarter = Date.StartOfQuarter(SameDayLastQuarter),
    
    SameDayLastWeek = Date.AddWeeks(TodayDate, -1),
    
    //Starting to Add Columns to the Table
    ThreeYearsAgo = Table.AddColumn(SelectOnlyTheDateColumn, "3 YEARS AGO", each if Date.Year([Date])=Date.Year(TodayDate)-3 then 1 else 0),
    TwoYearsAgo = Table.AddColumn(ThreeYearsAgo, "2 YEARS AGO", each if Date.Year([Date])=Date.Year(TodayDate)-2 then 1 else 0),
    LastYear= Table.AddColumn(TwoYearsAgo, "LAST YEAR", each if Date.Year([Date])=Date.Year(TodayDate)-1 then 1 else 0),
    CurrentYear= Table.AddColumn(LastYear, "CURRENT YEAR", each if Date.Year([Date])=Date.Year(TodayDate) then 1 else 0),
    //NextYear= Table.AddColumn(CurrentYear, "NEXT YEAR", each if Date.Year([Date])=Date.Year(TodayDate)+1 then 1 else 0),
    //TwoYearsForward= Table.AddColumn(NextYear, "2 YEARS FORWARD", each if Date.Year([Date])=Date.Year(TodayDate)+2 then 1 else 0),
    //ThreeYearsForward= Table.AddColumn(TwoYearsForward, "3 YEARS FORWARD", each if Date.Year([Date])=Date.Year(TodayDate)+3 then 1 else 0),

    ThreeMonthsAgo = Table.AddColumn(CurrentYear, "3 MONTHS AGO", each if Date.Year([Date])=Date.Year(Date.AddMonths(TodayDate, -3)) and Date.Month([Date])=Date.Month(Date.AddMonths(TodayDate, -3))  then 1 else 0),
    TwoMonthsAgo = Table.AddColumn(ThreeMonthsAgo , "2 MONTHS AGO", each if Date.Year([Date])=Date.Year(Date.AddMonths(TodayDate, -2)) and Date.Month([Date])=Date.Month(Date.AddMonths(TodayDate, -2))  then 1 else 0),
    LastMonth = Table.AddColumn(TwoMonthsAgo, "LAST MONTH", each if Date.Year([Date])=Date.Year(Date.AddMonths(TodayDate, -1)) and Date.Month([Date])=Date.Month(Date.AddMonths(TodayDate, -1))  then 1 else 0),
    CurrentMonth= Table.AddColumn(LastMonth, "CURRENT MONTH", each if Date.Year([Date])=Date.Year(Date.AddMonths(TodayDate, -0)) and Date.Month([Date])=Date.Month(Date.AddMonths(TodayDate, -0))  then 1 else 0),
    //NextMonth= Table.AddColumn(CurrentMonth, "NEXT MONTH", each if Date.Year([Date])=Date.Year(Date.AddMonths(TodayDate, +1)) and Date.Month([Date])=Date.Month(Date.AddMonths(TodayDate, +1))  then 1 else 0),
    //TwoMonthsForward= Table.AddColumn(NextMonth, "2 MONTHS FORWARD", each if Date.Year([Date])=Date.Year(Date.AddMonths(TodayDate, +2)) and Date.Month([Date])=Date.Month(Date.AddMonths(TodayDate, +2))  then 1 else 0),
    //ThreeMonthsForward= Table.AddColumn(TwoMonthsForward, "3 MONTHS FORWARD", each if Date.Year([Date])=Date.Year(Date.AddMonths(TodayDate, +3)) and Date.Month([Date])=Date.Month(Date.AddMonths(TodayDate, +3))  then 1 else 0),

    ThreeWeeksAgo = Table.AddColumn(CurrentMonth, "3 WEEKS AGO", each if [Date]>=StartOfThreeWeeksAgo and [Date]<StartOfTwoWeeksAgo then 1 else 0),
    TwoWeeksAgo = Table.AddColumn(ThreeWeeksAgo , "2 WEEKS AGO", each if [Date]>=StartOfTwoWeeksAgo and [Date]<StartOfLastWeek then 1 else 0),
    LastWeek = Table.AddColumn(TwoWeeksAgo, "LAST WEEK", each if [Date]>=StartOfLastWeek  and [Date]<StartOfCurrentWeek  then 1 else 0),
    CurrentWeek = Table.AddColumn(LastWeek, "CURRENT WEEK", each if [Date]>=StartOfCurrentWeek   and [Date]<StartOfNextWeek  then 1 else 0),
    //NextWeek = Table.AddColumn(CurrentWeek, "NEXT WEEK", each if [Date]>=StartOfNextWeek and [Date]<StartOfTwoWeeksAhead  then 1 else 0),
    //TwoWeeksAhead = Table.AddColumn(NextWeek, "2 WEEKS AHEAD", each if [Date]>=StartOfTwoWeeksAhead and [Date]<StartOfThreeWeeksAhead then 1 else 0),
    //ThreeWeeksAhead = Table.AddColumn(TwoWeeksAhead, "3 WEEKS AHEAD", each if [Date]>=StartOfThreeWeeksAhead and [Date]<Date.AddDays(StartOfThreeWeeksAhead,7) then 1 else 0),

    //Last3Months = Table.AddColumn(ThreeWeeksAhead, "LAST 3 MONTHS", each if [Date]>=Date.StartOfMonth(Date.AddMonths(TodayDate, -3)) and [Date]<=Date.EndOfMonth(Date.AddMonths(TodayDate, -1)) then 1 else 0),
    //Next3Months = Table.AddColumn(Last3Months, "NEXT 3 MONTHS", each if [Date]>=Date.StartOfMonth(Date.AddMonths(TodayDate, 1)) and [Date]<=Date.EndOfMonth(Date.AddMonths(TodayDate, 3)) then 1 else 0),

    //TheCurrentQuarter = Date.QuarterOfYear(TodayDate),
    //CurrentQuarter=Table.AddColumn(Next3Months , "CURRENT QUARTER", each if Date.IsInCurrentQuarter([Date])=true then 1 else 0 ),
    //LastQuarter = Table.AddColumn(CurrentQuarter, "LAST QUARTER", each if Date.IsInPreviousQuarter([Date])=true then 1 else 0 ),
    //NextQuarter = Table.AddColumn(LastQuarter, "NEXT QUARTER", each if Date.IsInNextQuarter([Date])=true then 1 else 0 ),

    Last90Days = Table.AddColumn(CurrentWeek, "LAST 90 DAYS", each if [Date]>=Date.AddDays(TodayDate,-90) and [Date]<TodayDate then 1 else 0),
    Last60Days = Table.AddColumn(Last90Days, "LAST 60 DAYS", each if [Date]>=Date.AddDays(TodayDate,-60) and [Date]<TodayDate then 1 else 0),
    Last30Days = Table.AddColumn(Last60Days, "LAST 30 DAYS", each if [Date]>=Date.AddDays(TodayDate,-30) and [Date]<TodayDate then 1 else 0),
    Last14Days = Table.AddColumn(Last30Days, "LAST 14 DAYS", each if [Date]>=Date.AddDays(TodayDate,-14) and [Date]<TodayDate then 1 else 0),
    Last7Days = Table.AddColumn(Last14Days, "LAST 7 DAYS", each if [Date]>=Date.AddDays(TodayDate,-7) and [Date]<TodayDate then 1 else 0),
    //Next7Days = Table.AddColumn(Last7Days, "NEXT 7 DAYS", each if [Date]>=Date.AddDays(TodayDate,1) and [Date]<Date.AddDays(TodayDate,7) then 1 else 0),
    //Next30Days = Table.AddColumn(Next7Days, "NEXT 30 DAYS", each if [Date]>=Date.AddDays(TodayDate,1) and [Date]<Date.AddDays(TodayDate,30) then 1 else 0),
    //Next60Days = Table.AddColumn(Next30Days, "NEXT 60 DAYS", each if [Date]>=Date.AddDays(TodayDate,1) and [Date]<Date.AddDays(TodayDate,60) then 1 else 0),
    //Next90Days = Table.AddColumn(Next60Days, "NEXT 90 DAYS", each if [Date]>=Date.AddDays(TodayDate,1) and [Date]<Date.AddDays(TodayDate,90) then 1 else 0),

    Yesterday = Table.AddColumn(Last7Days, "YESTERDAY", each if [Date]=Date.AddDays(TodayDate,-1) then 1 else 0),
    Today = Table.AddColumn(Yesterday , "TODAY", each if [Date]=TodayDate then 1 else 0),
    //Tomorrow = Table.AddColumn(Today, "TOMORROW", each if [Date]=Date.AddDays(TodayDate,1) then 1 else 0),
    //WeekendLabel = Table.AddColumn(Tomorrow, "WeekendLabel", each if Date.DayOfWeekName([Date])="Saturday" or Date.DayOfWeekName([Date])="Sunday" then 1 else 0 ),
  
    // To-Date Functions
    YTD = Table.AddColumn(Today, "YTD", each if [Date]>=StartOfCurrentYear and [Date]<TodayDate then 1 else 0),
      //QTD = Table.AddColumn(YTD, "QTD", each if [Date]>=StartOfCurrentQuarter and [Date]<=TodayDate then 1 else 0),
    MTD = Table.AddColumn(YTD, "MTD", each if [Date]>=StartOfCurrentMonth and [Date]<TodayDate then 1 else 0),
    WTD = Table.AddColumn(MTD, "WTD", each if [Date]>=StartOfCurrentWeek and [Date]<TodayDate then 1 else 0),
    PreviousYTD = Table.AddColumn(WTD, "PREVIOUS YTD", each if [Date]>=StartOfLastYear and [Date]<SameDayLastYear then 1 else 0),
      //PreviousQTD = Table.AddColumn(PreviousYTD, "PREVIOUS QTD", each if [Date]>=StartOfLastQuarter and [Date]<=SameDayLastQuarter then 1 else 0),
    PreviousMTD = Table.AddColumn(PreviousYTD, "PREVIOUS MTD", each if [Date]>=StartOfLastMonth and [Date]<SameDayLastMonth then 1 else 0),
    PreviousWTD = Table.AddColumn(PreviousMTD, "PREVIOUS WTD", each if [Date]>=StartOfLastWeek and [Date]<SameDayLastWeek then 1 else 0),
    All_Time = Table.AddColumn(PreviousWTD, "ALL TIME", each if [Date]<TodayDate then 1 else 0),

    Unpivot = Table.UnpivotOtherColumns(All_Time, {"Date"}, "Attribute", "Value"),
    RenamedColumns = Table.RenameColumns(Unpivot,{{"Attribute", "Horizon"}, {"Value", "Yes/No"}})
in
    RenamedColumns